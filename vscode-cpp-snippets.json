{
	"for loop": {
		"prefix": "forloop",
		"body": "for (int $1 = $2;$1 < $3; $1++) {$0}"
	},
	"for each": {
		"prefix": "fore",
		"body": "for (auto $1: $2) {$0}"
	},
	"for each refrence": {
		"prefix": "forer",
		"body": "for (auto& $1: $2) {$0}"
	},
	"for each input": {
		"prefix": "forein",
		"body": "for (auto& $1: $2) cin >> $1;"
	},
	"output & terminate with a new line": {
		"prefix": "coutn",
		"body": "cout << $0 << \\n;"
	},
	"output & terminate with a tab": {
		"prefix": "coutt",
		"body": "cout << $0 << \\t;"
	},
	"add to output stream": {
		"prefix": "<<",
		"body": " << $0"
	},
	"open input stream": {
		"prefix": "cinv",
		"body": "cin >> $0;"
	},
	"add to input stream": {
		"prefix": ">>",
		"body": " >> $0"
	},
	"while loop": {
		"prefix": "whileloop",
		"body": "while ($1) {$0}"
	},
	"include statement": {
		"prefix": "incl",
		"body": "#include <$0>"
	},
	"using namespace": {
		"prefix": "use",
		"body": "using namespace $0;"
	},
	"using namespace std": {
		"prefix": "usestd",
		"body": "using namespace std;"
	},
	"create a vector": {
		"prefix": "vec",
		"body": "vector<$1> $0;"
	},
	"create a string": {
		"prefix": "str",
		"body": "string $0;"
	},
	"create a map": {
		"prefix": "omap",
		"body": "map<$1, $2> $0;"
	},
	"create an unordered map": {
		"prefix": "umap",
		"body": "unordered_map<$1, $2> $0;"
	},
	"create a set": {
		"prefix": "oset",
		"body": "set<$1> $0;"
	},
	"create an unordered set": {
		"prefix": "uset",
		"body": "unordered_set<$1> $0;"
	},
	"single if statement": {
		"prefix": "ifcontd",
		"body": "if ($1) {$0}"
	},
	"if else statement": {
		"prefix": "ifel",
		"body": "if ($1) {$0} else {}"
	},
	"else if statement": {
		"prefix": "elif",
		"body": "else if ($1) {$0}"
	},
	"continue statement": {
		"prefix": "cont",
		"body": "continue;"
	},
	"break statement": {
		"prefix": "brk",
		"body": "break;"
	},
	"return statement":  {
		"prefix": "rtrn",
		"body": "return $0;"
	}
}
